# 서버 설정
server:
  port: ${SERVER_PORT:8080}

# Spring 설정
spring:
  # 데이터베이스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME}?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
  
  # Redis 기본 설정 (Spring Boot 표준)
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      connect-timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  # Redisson 설정 (Spring Boot Starter에서 자동 인식)
  redis:
    redisson:
      config: |
        singleServerConfig:
          address: "redis://${SPRING_REDIS_HOST:localhost}:${SPRING_REDIS_PORT:6379}"
          password: ${REDIS_PASSWORD:}
          connectionMinimumIdleSize: 1
          connectionPoolSize: 2
          timeout: 2000
          retryAttempts: 3
          retryInterval: 1500
  
  # 메일 설정  
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# 애플리케이션별 Redis 커스텀 설정
app:
  redis:
    # Stream 설정
    stream:
      ticket:
        name: ${REDIS_STREAM_TICKET_NAME:ticket_stream}
        group: ${REDIS_STREAM_TICKET_GROUP:ticket_group}
        consumer: ${REDIS_STREAM_TICKET_CONSUMER:ticket_consumer}
      dlq:
        name: ${REDIS_STREAM_DLQ_NAME:ticket_stream_dlq}
        group: ${REDIS_STREAM_DLQ_GROUP:dlq_group}
        consumer: ${REDIS_STREAM_DLQ_CONSUMER:dlq_consumer}
    
    # Ticket 관련 설정
    ticket:
      issued-set: ${REDIS_TICKET_ISSUED_SET:issued_tickets}
      counter-key: ${REDIS_TICKET_COUNTER_KEY:ticket_counter}
      max-tickets: ${REDIS_TICKET_MAX_TICKETS:100}
      lock-key: ${REDIS_TICKET_LOCK_KEY:ticket_issuance_lock}
      stream-key: ${REDIS_STREAM_TICKET_NAME:ticket_stream}
      lock-wait-time: ${REDIS_TICKET_LOCK_WAIT_TIME:5}
      lock-lease-time: ${REDIS_TICKET_LOCK_LEASE_TIME:10}
    
    # 공통 설정
    poll-timeout: ${REDIS_STREAM_POLL_TIMEOUT:100}
    max-retry: ${REDIS_STREAM_MAX_RETRY:3}
    
    # DLQ 설정
    dlq:
      process-count: ${REDIS_DLQ_PROCESS_COUNT:10}
      block-seconds: ${REDIS_DLQ_BLOCK_SECONDS:5}
      schedule-delay: ${REDIS_DLQ_SCHEDULE_DELAY:60000}

# JWT 설정
jwt:
  secret: ${JWT_SECRET}
  access-token-validity: ${JWT_ACCESS_TOKEN_VALIDITY:3600000} # 1시간
  refresh-token-validity: ${JWT_REFRESH_TOKEN_VALIDITY:1209600000} # 2주

# AWS 설정
cloud:
  aws:
    region:
      static: ${AWS_REGION:ap-northeast-2}
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket-name: ${AWS_S3_BUCKET_NAME}

# 로깅 설정
logging:
  level:
    org.hibernate.SQL: info
    org.hibernate.type.descriptor.sql: info
    com.seob: info

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
